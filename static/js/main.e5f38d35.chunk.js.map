{"version":3,"sources":["goku.png","Roghib.svg","List.js","WithList.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","repos","length","className","map","repo","href","html_url","target","rel","name","id","WithList","Component","isLoading","style","textAlign","fontSize","App","ListLoading","useState","loading","appState","setAppState","useEffect","fetch","then","res","json","alt","src","Roghib","goku","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,G,MAAA,IAA0B,kCCA1B,MAA0B,mCCqB1BA,EAnBF,SAACC,GAAW,IACfC,EAAUD,EAAVC,MACR,OAAKA,GAA0B,IAAjBA,EAAMC,OAElB,+BACE,oBAAIC,UAAU,aAAd,wCACCF,EAAMG,KAAI,SAACC,GACV,OACE,oBAAkBF,UAAU,OAA5B,SACE,mBAAGG,KAAMD,EAAKE,SAAUC,OAAO,SACjCC,IAAI,sBADF,SACyBJ,EAAKK,QAFvBL,EAAKM,UANmB,iD,cCQ5BC,MAVf,SAAkBC,GAChB,OAAO,YAAuD,IAAxBC,EAAuB,EAAvBA,UAAcd,EAAS,6BAC3D,OAAKc,EAEH,mBAAGC,MAAO,CAAEC,UAAW,SAAUC,SAAU,QAA3C,yBAFqB,cAACJ,EAAD,eAAeb,MCoC3BkB,MAhCf,WAEM,IAAMC,EAAcP,EAASb,GAFpB,EAGuBqB,mBAAS,CACvCC,SAAS,EACTpB,MAAO,OALA,mBAGFqB,EAHE,KAGQC,EAHR,KAiBb,OATIC,qBAAU,WACRD,EAAY,CAAEF,SAAS,IAEvBI,MADe,6CAEZC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACzB,GACLsB,EAAY,CAAEF,SAAS,EAAOpB,MAAOA,SAExC,CAACsB,IAEN,sBAAKpB,UAAU,MAAf,UACE,yBAAQA,UAAU,MAAlB,UACI,qBAAK0B,IAAI,SAASC,IAAKC,EAAQ5B,UAAU,SAAS,oBAAIA,UAAU,eAAd,uBAEtD,+BACI,oCACM,cAACgB,EAAD,CAAaL,UAAWQ,EAASD,QAASpB,MAAOqB,EAASrB,QAC1D,qBAAK4B,IAAI,OAAOC,IAAKE,EAAM7B,UAAU,kBCrBtC8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,WAG1BZ,M","file":"static/js/main.e5f38d35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/goku.80c212a7.png\";","export default __webpack_public_path__ + \"static/media/Roghib.61a60396.svg\";","import React from 'react';\r\n\r\nconst List = (props) => {\r\n  const { repos } = props;\r\n  if (!repos || repos.length === 0) return <p>No repos, sorry</p>;\r\n  return (\r\n    <ul>\r\n      <h2 className='list-title'>Public Github Repositories</h2>\r\n      {repos.map((repo) => {\r\n        return (\r\n          <li key={repo.id} className='list'>\r\n            <a href={repo.html_url} target=\"_blank\"\r\n          rel=\"noopener noreferrer\">{repo.name}</a>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nexport default List;\r\n","\r\nimport React from 'react';\r\nfunction WithList(Component) {\r\n  return function WihLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <p style={{ textAlign: 'center', fontSize: '30px' }}>\r\n        Loading ...\r\n      </p>\r\n    );\r\n  };\r\n}\r\nexport default WithList;","\nimport React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport goku from './goku.png'\nimport Roghib from './Roghib.svg';\nimport List from './List';\nimport WithList from './WithList';\nfunction App() {\n\n      const ListLoading = WithList(List);\n      const [appState, setAppState] = useState({\n        loading: false,\n        repos: null,\n      });\n    \n      useEffect(() => {\n        setAppState({ loading: true });\n        const apiUrl = 'https://api.github.com/users/roghib/repos';\n        fetch(apiUrl)\n          .then((res) => res.json())\n          .then((repos) => {\n            setAppState({ loading: false, repos: repos });\n          });\n      }, [setAppState]);\n  return (\n    <div className=\"App\">\n      <header className='ctr'>\n          <img alt='Roghib' src={Roghib} className='logo' /><h1 className='letter-space'>Roghib</h1>\n      </header>\n      <main>\n          <article>\n                <ListLoading isLoading={appState.loading} repos={appState.repos} />\n                <img alt='Goku' src={goku} className='goku' />\n          </article>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('roghib')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}